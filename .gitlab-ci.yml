image: node:18

services:
  - docker:dind

stages:
  - lint
  - test
  - coverage
  - build
  - deploy

lint:
  script:
    - npm install 
    - npx eslint "src/**/*.js" -f json -o lint-es.json 
    - npx htmlhint "src/**/*.html" --format json > lint-html.json 
    - npx stylelint "src/**/*.{css,scss}" -f json > lint-style.json  
    - jq -s add lint-es.json lint-html.json lint-style.json > lint.json
  artifacts:
    when: always
    paths:
      - lint.json

test:
  script:
    - npm install 
    - npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=test-results.xml
  artifacts:
    when: always
    reports:
      junit:
        - test-results.xml 
    paths:
      - test-results.xml

coverage:
  script:
    - apt-get update && apt-get install -y python3-pip  
    - pip3 install coverage pytest 
    - coverage run -m pytest
    - coverage report 
    - coverage xml  
  artifacts:
    when: always
    paths:
      - coverage.xml

build:
  script:
    - docker build -t $DOCKER_USERNAME/web-test:latest . 
  needs:
    - lint
    - test
    - coverage

push_to_dockerhub:
  stage: deploy
  script:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin  
    - docker push $DOCKER_USERNAME/web-test:latest 
  needs:
    - build